### General settings ###

#
# Port that the HTTP-service listens on.
#
daemon.http.port=20190

#
# Directories for managing the deposits.
#
# - stage-zips: is used for uploads of zipped directories or complete deposits.
# - drafts: contains the draft deposits; single files are uploaded here directly, unzipped directories and deposits
#     are moved here from stage-zips.
# - stage-for-submit: the completed draft is copied here when the user submits it.
# - submit-to: the target directory to which the copy in stage-for-submit is moved for further processing.
#
# N.B. stage-zips and drafts must be located on the same partition in order to support atomic moving. The same
# holds for stage-for-submit and submit-to.
#
# Note that the stage-* directories only have temporary content, so the service should clear them automatically.
#
deposits.stage-zips=data/stage-upload
deposits.drafts=data/drafts
deposits.stage-for-submit=data/stage
deposits.submit-to=data/easy-ingest-flow-inbox

# file rights that allow easy-ingest-flow to process deposits from its inbox
deposit.permissions.group=deposits

#
# Settings for user authentication. The LDAP directory at ldap-url is used to check the credentials
# of the user by trying to access the entry:
#
# <ldap-user-id-attr-name>=<username>, <ldap-parent-entry>
#
# For example user jdoe wants to connect. With the defaults this will result in easy-deposit-api
# to try and access
#
# uid=jdoe,ou=users,ou=easy,dc=dans,dc=knaw,dc=nl
#
# LDAP should be set up so as to only allow access to users with the correct password.
#
users.ldap-url=ldap://deasy.dans.knaw.nl
users.ldap-parent-entry=ou=users,ou=easy,dc=dans,dc=knaw,dc=nl
users.ldap-user-id-attr-name=uid

# Settings required to fetch user data when we no longer have its password.
users.ldap-admin-principal=cn=ldapadmin,dc=dans,dc=knaw,dc=nl
users.ldap-admin-password=ldapadmin

pids.generator-service=http://deasy.dans.knaw.nl:20140/

# Lifetime for cookie with name scentry.auth.default.user that contains the jwt after providing valid credentials.
# In seconds, 60*10=600 is 10 minutes
auth.cookie.expiresIn=600

# Pick a value starting with H, see fromString in https://github.com/pauldijou/jwt-scala/blob/master/core/common/src/main/scala/JwtAlgorithm.scala
auth.jwt.hmac.algorithm=HS256
auth.jwt.secret.key=changeMe
